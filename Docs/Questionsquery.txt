

ALTER TABLE category_details  AUTO_INCREMENT = 1100;

ALTER TABLE question_details  AUTO_INCREMENT = 2200;



INSERT INTO category_details (category_name)
VALUES ('CULTURE');


INSERT INTO category_details (category_name)
VALUES ('AUTOMATE');


INSERT INTO category_details (category_name)
VALUES ('MEASURE');


INSERT INTO category_details (category_name)
VALUES ('SHARE');



/***Culture***/

INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('1-Is DevOps Customer or Organisational or Team objective? ','DevOps is a cultural movement, driven by People, Processes and Tools. For DevOps to be successful, it should be the mandate/objective/priority of either Customer, Organisation, team or All i.e. it should be driven consistently and the rigor must come from either customer, organization, teams or all.','1100');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('2-Is there a consensus on strategy on how to implement DevOps?','DevOps implementation requires different teams - Development, Support, Testing, Infrastructure, Security working together as one team. Since there could different ways to develop and implement DevOps manifesto, it is important that key stakeholders agree on a transformation program. For example, instead of a big bang approach we could start with a couple of pilot projects based on the DevOps approach or implement on the onset of greenfield projects. The pilots could be non-business critical and technology and tool stack where organization benefits most. Clearly this means, a single team integrating all disciplines with clear goals and objectives. All of this would require a clear implementation strategy.','1100');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('3-Does Organizational / Team structure and Tooling support cross-functional teams?','DevOps manifesto tries to synergize Development and Operations. One strategy proposed by DevOps is to do away with the functional silos altogether and create cross-functional teams (also called multifunctional, poly-skilled, or interdisciplinary) having complimentary skills This is especially important from  continuous delivery perspective where teams must have a broader view of delivery. Developing collective responsibility and accountability for the complete lifecycle is more important than it\'s individual components - Implementation, Testing or Operations. Extending this understanding towards supporting tools mandates a tooling which is end-to-end rather than discrete tools supporting individual functional silos. Moreover, creation of cross-functional teams is not forbidden by regulation or best practice as Sarbanes-Oxley, ITIL and COBIT nowhere mandate segregation of duties.','1100');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('4-Are the Teams empowered, self  driven and accountable?','DevOps emphasis on efficient & effective teams. Empowered and self-driven teams are self-sufficient groups of people working together for a specific goals. They often exemplify total commitment to work and to each other. Team members possess complementary skills e.g., technical, problem-solving, decision-making and interpersonal skills to allow them to implement Concept to Grave principle which enables them to be fully accountable for the product they are managing. They open lines of communication, look for early resolution of conflict, high levels of respect among members and quickly helping low-performing members. Such teams do not simply happen. They take much effort & time and proper guidance & support. The key is to build such teams by providing clarity of purpose, agreement on desired result, role clarification and developing interpersonal relationships. This also requires organizing team building activities on regular basis. Post which the teams must be trusted and held accountable for the desired outcomes. DevOps lays significant emphasis on the enabling structure to develop such teams.','1100');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('5-Do the Teams get environment of Creativity and Innovation?','DevOps recommends fostering an environment that values challenging ideas and implementation without the fear to fail. It recommends the core principle of a Lean Startup wherein ideas are built faster, measured faster and learnings are faster to achieve perfection. It fosters the culture of If it hurts, do it more often. The key is to recognize people who are proactive, curious and encourage cross-learning by breaking silos. The teams must take end-to-end ownership of delivering all the work (instead of “my” work and “others” work), better every time. DevOps manifesto says that no matter how much drive / rigor is put behind DevOps implementation, but without this single focus, its implementation would be futile. The working beyond silos is required in all aspects of system delivery - infrastructure H/W & S/W, Trainings, High end labs, Integrated tools, Logistics, Brainwork\'s, Innovation contests, etc.','1100');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('6-Do the Teams have appropriate Reward and Recognition system in place?','DevOps movement mandates collaborative and cooperative working between Dev and Operations teams as it calls for speed & agility. To meet this objective, Organisation should encourage and value individuals who demonstrate such behaviors. DevOps specific Rewards & Recognition system should be put in place to encourage employees in developing such behaviors. This may include identifying DevOps champions, recognition certificates for collaborative working, cash prizes/incentives for breaking barriers, providing gadgets for increasing automation, etc.','1100');



/*Automate*/


INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('1-Does the Tools help people to collaborate?','Integrated toolset is a must for the successful implementation of Devops. Effective tools may exist for different phases of SDLC and Operations but until and unless these tools are integrated, minimal DevOps benefits would be achieved. Integrated toolset means either same tool is used in multiple SDLC phases or output of one tool is consumed automatically by other tool used in the next SDLC phase. Note that tool integration should not be only unidirectional but bidirectional. How well these tools communicate with each other across different phases of SDLC determines the level of  automation, e.g. the tool used to generate the automatic test cases and data should be able to handle the scenarios resulting from change in development. The updated  test cases and data should be automatically used by the automated testing tool.  This process enables team to continuously integrate their code build to the down stream process.
Collaboration tools e.g. Team Foundation, Microsoft Teams, JIRA, HipChat, Pivotal Tracker, ServiceNow, Stack, etc.','1101');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('2-Do teams continuously work on minimizing manual intervention, improving RFT (right First Time) and reducing CT (Cycle Time)? ','To gain the maximum benefit out of DevOps implementation, it is vital that the teams work towards reducing / eliminating the noise caused due to various manual interventions existing in a particular system environment. It is recognized that failure of any manual intervention leads to disruption resulting in incidents, major incidents, escalations, customer dissatisfaction, etc. Such issues further take away time of the teams to restore service. Dev and Ops teams must work together in a planned way to identify and minimise all known manual interventions by exploring all possible solutions. It is recommended that a track of all manual interventions is maintained and reasons of not automating is discussed in key review meetings. LEAN methodology can be put in use to identify waste in the system. Eliminating or minimizing waste will help us to reduce the cycle time and also improve right first time.','1101');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('3-Is application release deployments fully automated end-to-end across development, test and production environments?','A key goal of DevOps is to improve continuous delivery process – from ideation to customer satisfaction. That means, even if continuous deployment is not a business requirement, ability to continuous delivery is mandatory. Most of the times it is misunderstood, hence, incorrectly implemented thinking only the final release to production deployment should be automated. DevOps sees a regular deployment pipeline as an automated implementation of your application’s build, deploy, test and release process effectiveness.
Automated deployment tools e.g. Jenkins, Otto, Deployment Manager, Capistrano, RapidDeploy, ElectricFlow, DeployBot, IBM UrbanCode, AWS CodeDeploy, Shippable, Bamboo, Codar, CircleCI, Automic, Distelli, etc.','1101');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('4-Can Developers easily create environments that closely match production?','Can teams avoid test validation errors (software defects), which are discovered late in delivery? While, DevOps recommends Technical competencies, automation tools and accesses / permissions that can help avoid such unwanted situations, creating environments closely matching production will be the first step in that direction. Moreover, support and synergy should exist between the different teams (developers, support, testing & security) supporting different environments so that any adverse impact due to different environment is captured early. So the basic question here is, are there the right toolsets, skills and synergy between the teams to help developers easily create production like environments for various purposes?
Automated Provisioning tools e.g. Ansible, Appcore, Automate, Bcfg2, BladeLogic Server Automation, CFEngine, Chef, Cirba, Puppet, Vagrant, Consul, Saltstack, Docker, etc.','1101');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('5-When requirements change, can systems auto-generate test-cases along with test data?','In current dynamic times, changes to the service/system/applications are happening on a very frequent basis. There could be sudden unforeseen changes in the requirement - not just during the span of a project / program, but, also when the service goes live into operation. Systems when designed and built should cater for such potential changes in the future and provide window to auto test impact of such changes on the the future, e.g. sudden change in regulatory policies impacting reporting. However, post few months in operations due to some organizational changes it should now be accessible to 600+ users. If test-cases along with the test-data could be automatically generated for such new requirements in the future, then it would justify DevOps automate core value.
Automated Testing tools e.g. Tricentis, Zephyr, Jenkins, Bamboo, Jmeter, Selenium, Appium, SoapUI, FitNesse, JUnit, TestING, Jasmine, Karma, Mocha, etc.','1101');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('6-Is Testing fully automated across the SDLC with validation mechanisms?','Automated testing is critical to ensure quality and fast feedback. While all stakeholders may be keen to see green lights and check boxes quickly, but if the teams are not clear on what \'s being validated and how, then it \'s easy to miss the value in the testing, resulting in validation efforts to increase. Comprehensive test automation should help them better leverage their efforts and fill in the gaps where necessary. Therefore, DevOps strongly advocates full test automation for all aspects of testing, functional and non-functional covering performance & regression testing , unit & load testing, simulating etc. ','1101');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('7-Can Teams quickly generate and mask sensitive data on existing systems or generate synthetic data?','While test management tools provide capabilities for managing test cases/planning/execution, defect management, test automation monitoring, etc. the management of data itself takes a back seat as it loses out the focus. As a best practice, we are insisted on using production data for testing purposes because it represents the most realistic environment to test.  However, production data may contain sensitive information handling of which may require special security clearance of the staff. This is especially true when testing is outsourced or off-shored. Therefore, teams capability to quickly identify and mask sensitive data using various masking algorithms e.g. encryption, substitution, aging, etc. or produce the synthetic data is extremely important. 
Data masking tools e.g. BlueTalon, Camouflage - CX-Mask and CX-Dynamic, Dataguise - DgSecure, Delphix Masking Engine and DMSuite DDM, Oracle Advanced Security, Informatica Dynamic Data Masking, Informatica Persistent Data Masking, IBM Security Guardium Data Activity Monitor, Infosphere Guardium, Micro Focus (HPE Software) Format Preserving Encryption, CA Test Data Manager for Masking and Subsetting, IRI FieldShield, iMask, iScramble, Protegrity - Database Protector, Thales e-Security - Data Masking, etc.','1101');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('8-Do Teams have Process/tool for automatic Security & vulnerability testing?','Do teams have processes and tools to track and reveal flaws in the security mechanisms of a system to protect data and maintain functionality as intended? Ideally, these processes and tools should kick in right at the architecture and design stage to avoid significant surprises later. Therefore, regular security & vulnerability testing should be part of the end-to-end Development and Operational process. Ideally this should be performed automatically, along with any upgrade patches thus ensuring:
• Perimeter Security - Software firewalls in place
• Content Security - Antivirus systems at all the traffic entry, exit and storage points
• Remote access - strong two factor authentication
• Authentication - Biometrics, AAA systems and strong static passwords
• Encryption - software encryption, hardware encryption using dedicated encryption boxes and firewalls with VPN capabilities, PGP etc.
This is also known as DevSecOps
Automated Security & Vulnerability Testing tools e.g. Gauntlt, Veracode, Contrast Security, ZED Attack Proxy (ZAP), Wapiti, W3af, Iron Wasp, SQLMap, Google Nogotofail, BeEF (Browser Exploitation Framework), Gitrob, CHECKMARX, Sonatype, TANIUM, Splunk, Evident.io, Nessus, etc.','1101');



/***Measure***/

INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('1-Do Teams measure effectiveness of tools and processes used?','Tools and processes are designed and implemented to assist in the operability of the service. One of the primary objective of the tools and processes is the ease of use & responsiveness of the process. Sometimes tools used by Dev (e.g. project planning tool, etc) could as well be used by Ops teams for their maintenance and planning purposes. Similarly, tools used in production environments, could provide invaluable insight to the system designers and developers on the system performance. While a tool/process may be extremely useful for a particular environment, it may not be that helpful elsewhere. Therefore, effectiveness of tool/process should be measured regularly for any bottlenecks and latency.
Critical Success Factors & KPIs can be defined for any process.
Request Fulfillment process there may exist CSF e.g. Requests must be fulfilled in an efficient and timely manner that is aligned to agreed service level targets for each type of request, Only authorized requests should be fulfilled, etc.
Incident Management process there may exist KPI e.g. Reduction in number of repeated incidents, First time resolution rate, resolution within SLA rate, incident resolution effort, etc.
Capacity Management process there may exist KPI e.g. Incidents due to Capacity Shortages, Unplanned Capacity Adjustments, Resolution Time of Capacity Shortage, etc.','1102');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('2-Are there any measures for evaluating quality of interactions between Dev and Ops?','DevOps focuses on effective interaction between various teams. There should be regular meeting between the development and operation team throughout the project lifecycle. Similarly, Architects and Systems Designer should be regularly engaged during the support lifecycle. These meetings should not be just limited to checkpoint calls or KT sessions but also focus on service improvement and customer experience.  This may include, user feedback about the application and how to improve that, review of the improvement plan from implementation perspective, Lessons Learnt from various delivery artifacts at various stages of delivery etc. To determine the effectiveness of such interactions, measures such as who all attended the review meetings, Number of ideas progressed, rate of closure of actions from the previous meetings, change in the ownership on unresolved issues, etc should be included.  ','1102');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('3-Is Ops monitoring able to distinguish between the most critical and recurrent problems?','A successful DevOps implementation in a service will require Ops teams to be able to identify and distinguish the most critical and repeating problems in the service. This would help them apply their efforts at the right place and increase their responsiveness, e.g. building and maintaining a strong Known Error Database (KEDB), periodic analysis of incident volume to identify recurrent issues and addressing them via Problem Management process or even getting in touch with Dev teams to get their inputs from design/architecture perspective. Linking incidents, problem records to changes & releases. This shift will convert orphaned tickets to linked tickets. Various LEAN tools e.g. SIPOC, Value Stream Mapping, 5 Why, Kaizen, etc can be made use to distinguish recurrent problems and issues.','1102');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('4-Do Teams correlate and analyze multiple applications metrics to solve complex problems before they impact end-user?','Collecting and analyzing application metrics can be most challenging because as the applications change, so do the metrics you need to see. Often, you don’t know what you should be measuring until you encounter the problem. On some other occasions, the required tooling could be a limiting factor. Multiple vendor delivery may add to the complexity further. Amongst many others, Customer-centric approach is the key for DevOps to be successful. Unless proactive measures are taken (e.g. event traps, health checks, preventive maintenance, etc) of various application parameters and correlated & analyzed across the entire value stream cutting across multiple application, we will not be able to provide disruption-free service to the end-user. Needless to say, DevOps teams will have to work together for analysis and remedial action.','1102');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('5-Any measures related to feedback from Ops to Business or Vice-Versa?','Agile recognizes the interdependence of Business & software development whereas DevOps closes the loop by taking it one step further to Operations and back to Business. Therefore DevOps emphasizes communication, collaboration and integration between business users, software developers and operations team. Getting these groups to work continuously cohesively and collaboratively is key for DevOps adoption. It is important to organize these meeting between various stakeholders on a periodic basis and effectiveness measured. For example, Business, Operations representation during the Design of the system & testing; meetings/conference calls before major deployment/release, etc. All meeting should be formally minuted, tracked and formal feedback and actions circulated.','1102');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('6-Can Development & Operation teams monitor business services that link end-user experience & end-to-end transactions?','Whether it’s improving the efficiency of IT operations or minimizing application and infrastructure downtime, the focus is clearly towards business outcomes. This has resulted in business transaction becoming a critical metric. DevOps helps to mitigate performance issues by moving IT even closer with the business owners to understand how performance and customer behaviors impact business transactions. e.g. server-side monitoring helps track response time and throughput taken by each application component, with the option to trace transactions end-to-end via code analysis. This helps the teams identify slow Web transactions and then isolate performance issues down to the level of the specific application code that caused them.
End-user experience monitoring tools e.g. Cisco AppDynamics Application Performance Monitoring, ControlUp Real-time, Dynatrace, eG Enterprise, Nexthink, Pandora FMS Enterprise, Quest Foglight, Riverbed SteelCentral, uberAgent, etc.
End-to-End transaction monitoring tools e.g. SharePath, CitraTest APM, BMC Transaction Management Application Response Time (TMART), AppDynamics, Dell Foglight, etc.','1102');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('7-Can Teams quickly generate and mask sensitive data on existing systems or generate synthetic data?','While test management tools provide capabilities for managing test cases/planning/execution, defect management, test automation monitoring, etc. the management of data itself takes a back seat as it loses out the focus. As a best practice, we are insisted on using production data for testing purposes because it represents the most realistic environment to test.  However, production data may contain sensitive information handling of which may require special security clearance of the staff. This is especially true when testing is outsourced or off-shored. Therefore, teams capability to quickly identify and mask sensitive data using various masking algorithms e.g. encryption, substitution, aging, etc. or produce the synthetic data is extremely important. 
Data masking tools e.g. BlueTalon, Camouflage - CX-Mask and CX-Dynamic, Dataguise - DgSecure, Delphix Masking Engine and DMSuite DDM, Oracle Advanced Security, Informatica Dynamic Data Masking, Informatica Persistent Data Masking, IBM Security Guardium Data Activity Monitor, Infosphere Guardium, Micro Focus (HPE Software) Format Preserving Encryption, CA Test Data Manager for Masking and Subsetting, IRI FieldShield, iMask, iScramble, Protegrity - Database Protector, Thales e-Security - Data Masking, etc.','1102');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('8-Do Teams have Process/tool for automatic Security & vulnerability testing?','Do teams have processes and tools to track and reveal flaws in the security mechanisms of a system to protect data and maintain functionality as intended? Ideally, these processes and tools should kick in right at the architecture and design stage to avoid significant surprises later. Therefore, regular security & vulnerability testing should be part of the end-to-end Development and Operational process. Ideally this should be performed automatically, along with any upgrade patches thus ensuring:
• Perimeter Security - Software firewalls in place
• Content Security - Antivirus systems at all the traffic entry, exit and storage points
• Remote access - strong two factor authentication
• Authentication - Biometrics, AAA systems and strong static passwords
• Encryption - software encryption, hardware encryption using dedicated encryption boxes and firewalls with VPN capabilities, PGP etc.
This is also known as DevSecOps
Automated Security & Vulnerability Testing tools e.g. Gauntlt, Veracode, Contrast Security, ZED Attack Proxy (ZAP), Wapiti, W3af, Iron Wasp, SQLMap, Google Nogotofail, BeEF (Browser Exploitation Framework), Gitrob, CHECKMARX, Sonatype, TANIUM, Splunk, Evident.io, Nessus, etc.','1102');




/***Share***/



INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('1-Are there formal Information Sharing session between Dev and Ops?','Foundation of DevOps success is how well teams and individuals understands each others goals, dificulties & priorities. It is essential that every participant in the development & support teams is able to share information about their area/responsibilities/tasks and communicate, without friction, with each other. It is extremely important that regular feedback sessions are held between different interfaces of software lifecycle without bias. For example, Application performance monitoring stats/RCA for the problem records shared with Development team as part of monthly governance calls. Release & deployment notes shared with support teams in advance for their review and inputs before release etc. Various tools/methodologies that could be used during such sessions are Kanban, Visual Management, Scrum meetings, etc.','1103');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('2-Do Dev & Ops teams rotate their key personnel between the teams effectively?','DevOps is all about breaking silos in various teams including but not limited to design, development, Test, environment, deployment, operation and service improvement teams.  Although there should be regular quality interaction between these teams but rotation of key persons between various teams would yield magical results. Infusion of an experienced sustain resource to development team can help the team to foresee support scenarios and would help to devise a more fit for purpose solution. Similarly, a development resource with in-depth technical knowledge, while introduced in support, can give a new dimension in resolution of complex production issues. The infusion of the key personnel doesn’t necessarily have to be full time, could be part time, but must happen frequently and periodically during application lifecycle. ','1103');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('3-Do Dev & Ops work together to analyze historical tickets?','Rather than seeing development and operation teams as silos who pass things along with each other but don\'t really work together, DevOps recognizes the essential need for these two groups to also work together for service betterment. As the owner of production system, Ops analyse historical tickets always. But, due to lack of their architectural knowledge of the applications / system sometimes it is beneficial to share the analysis / data with the development team e.g. architect, designer, etc. Upon receiving the historical ticket analysis, Dev team must add value from their architectural / design knowledge. As, their inputs may bring out a different paradigm to the root cause of the issue, which could otherwise be totally different from what operations team might have concluded.','1103');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('4-Do Dev & Ops both analyze monitoring stats to prevent defects from getting into production?','In a traditional structure, it\'s the responsibility of Quality Assurance (QA) team to prevent defects getting in to production. However, DevOps recommends Continuous Integration and Continuous Delivery approach. Clearly, implementation of the right tools play a vital role in both the approaches. Development teams use various Continuous Integration tools (e.g. ChangePoint, Maven, J unit/N for testing their code), to integrate code into a shared repository multiple times each day. Similarly, Operations teams use various tools for infrastructure monitoring (Nagios), application performance monitoring (New Relic, HPSC, ServiceNow, Splunk), across enterprise to prevent defects into production. The important thing to implement here is that all monitoring data should be periodically analysed and reviewed by the DevOps teams together to identify hot spots and roll out preventive actions. Similarly during implementation residual issues in the application should be discussed with the operation teams.','1103');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('5-Can Dev & Ops teams quickly identify the reasons for the change on the Systems performance?','Any change in the systems performance has a direct impact on it\'s operability. But, the underlying root cause behind this could be related to some niggle in the development (design/architecture) of that system. Dev and Ops team should be in control to quickly pick up variations (e.g. sudden volatility in demand-supply, obsolete/outdated infrastructure (H/W & S/W), sub standard tools, not properly configured/installed/maintained) in system performances and the factors contributing to the same, e.g. post deployment of a new functionality in an application users are experiencing slow system performance.','1103');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('6-Do Teams establish continuous feedback loops to share important information?','Is there a continuous process in place whereby both Dev and Ops go from trapped knowledge to shared knowledge? DevOps recognizes the interdependence of Business, software development and IT operations. Therefore emphasizes on communication, collaboration and integration between business users, software developers and operation team. Getting these groups to work continuously cohesively and collaboratively is key for DevOps adoption. For example, Business, Operations representation during the Design of the system & testing, having regular weekly/monthly formal meeting among these key teams,  meetings/conference calls before major deployment/release, formal feedback from operations with respect to any issues related to latest release/change to the development team, Service gateways and Service acceptance calls, etc.','1103');
INSERT INTO question_details (questionlabel,question_desc,category_id)
VALUES ('7-Any Compliance requirements on sharing of People, Process, Tools and Information?','Sharing of  People, Process, Tools and Information is a key aspect of DevOps. But customer security and confidentiality requirements cannot be compromised. It is therefore essential to discuss and understand the implication of this aspect with all stakeholders before DevOps implementation. 
Various such compliance regulations that exists are USA \'s Sarbanes-Oxley Act (SOX), European Union \'s General Data Protection Regulation (GDPR), UK \'s Data Protection Act, etc.','1103');
